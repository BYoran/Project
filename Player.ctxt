#BlueJ class context
comment0.target=Player
comment0.text=\r\n\ Class\ made\ to\ represent\ a\ player\ in\ the\ game\ "Untitled\ Bakery\ Game."\ Will\ Contain\r\n\ information\ about\ the\ players\ location,\ as\ well\ as\ what\ they\ have\ in\ their\r\n\ inventory.\ Methods\ include\ move,\ to\ move\ the\ player\ throughout\ he\ world,\ as\r\n\ well\ as\ getters\ for\ instance\ variables.\r\n\ \r\n\ @author\ Bjorn\ and\ Minco\r\n\r\n
comment1.params=
comment1.target=Player()
comment1.text=\r\n\ Constructor\ that\ initializes\ the\ player\ location\ to\ the\ first\ room.\r\n\ \r\n\ @author\ Bjorn\r\n
comment10.params=
comment10.target=void\ getInventory()
comment10.text=\r\n\ Getter\ method\ that\ prints\ out\ the\ objects\ in\ the\ players\ inventory.\r\n\ \r\n\ @author\ Minco\r\n
comment11.params=item
comment11.target=void\ look(java.lang.String)
comment11.text=\r\n\ Method\ that\ gets\ an\ items\ description\ if\ it\ is\ in\ your\ inventory.\r\n\ \r\n\ @param\ item\r\n\ \ \ \ \ \ \ \ \ \ name\ of\ item\r\n\ @author\ Minco\r\n
comment12.params=rooms
comment12.target=void\ look(java.util.HashMap)
comment12.text=\r\n\ Method\ that\ gets\ description\ of\ room\ currently\ in.\r\n\ \r\n\ @param\ rooms\r\n\ \ \ \ \ \ \ \ \ \ collection\ of\ rooms\ in\ game\r\n\ @author\ Bjorn\r\n
comment13.params=
comment13.target=int\ getScore()
comment13.text=\r\n\ Getter\ method\ that\ returns\ players\ score.\r\n\ \r\n\ @return\r\n\ \ \ \ \ \ \ \ \ \ int\ representing\ score\r\n\ @author\ Minco\r\n
comment14.params=scores\ ref
comment14.target=void\ checkScores(java.util.HashMap,\ java.lang.String)
comment14.text=\r\n\ Method\ used\ to\ check\ whether\ a\ given\ action\ from\ player\ warrants\ giving\ them\r\n\ points.\r\n\ \r\n\ @param\ scores\r\n\ \ \ \ \ \ \ \ \ \ collection\ of\ Score\ objects\r\n\ @param\ ref\r\n\ \ \ \ \ \ \ \ \ \ represents\ string\ used\ for\ finding\ particular\ key\ value\r\n\ @author\ Minco\r\n
comment2.params=room
comment2.target=void\ addRoom(java.lang.String)
comment2.text=\r\n\ Method\ that\ will\ be\ used\ to\ add\ current\ player\ location\ into\ stack.\r\n\ \r\n\ @param\ room\r\n\ \ \ \ \ \ \ \ \ \ \ \ room\ that\ represents\ location\ of\ player\r\n\ @author\ Bjorn\r\n
comment3.params=direction\ rooms
comment3.target=void\ move(java.lang.String,\ java.util.HashMap)
comment3.text=\r\n\ Move\ is\ a\ method\ that\ will\ be\ responsible\ for\ moving\ the\ player\ from\ the\r\n\ room\ they\ are\ currently\ in,\ to\ any\ of\ the\ possible\ adjacent\ rooms.\ The\ direction\r\n\ must\ be\ north,\ south,\ east,\ west,\ up\ or\ down.\r\n\ \r\n\ @param\ direction\r\n\ \ \ \ \ \ \ \ \ \ \ \ string\ to\ represent\ direction\ player\ wishes\ to\ travel\r\n\ @param\ rooms\r\n\ \ \ \ \ \ \ \ \ \ \ \ list\ that\ contains\ all\ the\ room\ objects\ created\r\n\ @author\ Bjorn\ &\ Minco\r\n
comment4.params=rooms
comment4.target=void\ back(java.util.HashMap)
comment4.text=\r\n\ Back\ is\ a\ method\ that\ will\ be\ responsible\ for\ returning\ the\ player\ from\r\n\ the\ room\ they\ are\ currently\ in,\ to\ the\ room\ they\ were\ previously.\r\n\ \r\n\ @param\ rooms\r\n\ \ \ \ \ \ \ \ \ \ \ \ stack\ that\ contains\ all\ the\ previous\ visited\ rooms\r\n\ @author\ Bjorn\r\n
comment5.params=
comment5.target=void\ goRandomRoom()
comment5.text=\r\n\ Method\ that\ will\ be\ used\ to\ random\ determine\ which\ room\ the\ player\ will\r\n\ be\ put\ in.\ It\ will\ always\ have\ a\ random\ number.\r\n\ \r\n\ @author\ Bjorn\r\n
comment6.params=item\ rooms
comment6.target=void\ add(java.lang.String,\ java.util.HashMap)
comment6.text=\r\n\ Method\ that\ will\ be\ used\ to\ add\ an\ object\ from\ the\ room\ you\ are\ in\ to\r\n\ your\ inventory.\ Object\ must\ be\ in\ room\ you\ are\ in.\r\n\ \r\n\ @param\ item\r\n\ \ \ \ \ \ \ \ \ \ \ \ represents\ item\ you\ wish\ to\ add\ to\ your\ inventory\r\n\ @author\ Bjorn\ &\ Minco\r\n
comment7.params=item\ rooms
comment7.target=void\ drop(java.lang.String,\ java.util.HashMap)
comment7.text=\r\n\ Method\ that\ will\ be\ responsible\ for\ dropping\ an\ item\ from\ you\ inventory\r\n\ to\ the\ room\ you\ are\ in.\ Must\ already\ have\ object\ in\ your\ inventory.\r\n\ \r\n\ @param\ item\r\n\ \ \ \ \ \ \ \ \ \ \ \ represents\ name\ of\ item\ you\ wish\ to\ drop\r\n\ @author\ Bjorn\ &\ Minco\r\n
comment8.params=item
comment8.target=void\ bake(java.lang.String)
comment8.text=\r\n\ Method\ that\ will\ be\ responsible\ for\ baking\ the\ specified\ recipe\ from\ your\r\n\ inventory\ when\ you\ are\ in\ the\ kitchen.\ Must\ already\ have\ specified\ recipe\r\n\ in\ your\ inventory.\r\n\ \r\n\ @param\ item\r\n\ \ \ \ \ \ \ \ \ \ \ \ represents\ recipe\ you\ wish\ to\ bake\ from\ your\ inventory\r\n\ @author\ Bjorn\r\n
comment9.params=
comment9.target=java.lang.String\ getLocation()
comment9.text=\r\n\ Getter\ method\ that\ returns\ the\ players\ location.\r\n\ \r\n\ @return\ \r\n\ \ \ \ \ \ \ \ \ \ String\ representing\ name\ of\ room\ player\ is\ in\r\n\ @author\ Bjorn\r\n
numComments=15
