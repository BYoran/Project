#BlueJ class context
comment0.target=Player
comment0.text=\r\n\ Class\ made\ to\ represent\ a\ player\ in\ the\ game\ "adventure."\ Will\ Contain\r\n\ information\ about\ the\ players\ location,\ as\ well\ as\ what\ they\ have\ in\ their\r\n\ inventory.\ Methods\ include\ move,\ to\ move\ the\ player\ throughout\ he\ world,\ as\r\n\ well\ as\ getters\ for\ instance\ variables.\r\n\ \r\n\ @author\ charlie.minges\r\n\r\n
comment1.params=
comment1.target=Player()
comment1.text=\r\n\ Constructor\ that\ initializes\ the\ player\ location\ to\ the\ first\ room\r\n
comment10.params=scores\ ref
comment10.target=void\ checkScores(java.util.HashMap,\ java.lang.String)
comment10.text=\r\n\ Method\ used\ to\ check\ whether\ a\ given\ action\ from\ player\ warrants\ giving\ them\r\n\ points.\r\n\ \r\n\ @param\ scores\r\n\ \t\t\tcollection\ of\ Score\ objects\r\n\ @param\ ref\r\n\ \t\t\trepresents\ string\ used\ for\ finding\ particular\ key\ value\r\n\ \t\t\t\r\n
comment2.params=direction\ rooms
comment2.target=void\ move(java.lang.String,\ java.util.HashMap)
comment2.text=\r\n\ Move\ is\ a\ method\ that\ will\ be\ responsible\ for\ moving\ the\ player\ from\ the\r\n\ room\ they\ are\ currently\ in,\ to\ any\ of\ the\ possible\ adjacent\ rooms.\ The\ direction\r\n\ must\ be\ north,\ south,\ east,\ or\ west.\r\n\ \r\n\ @param\ direction\r\n\ \ \ \ \ \ \ \ \ \ \ \ string\ to\ represent\ direction\ player\ wishes\ to\ travel\r\n\ @param\ rooms\r\n\ \ \ \ \ \ \ \ \ \ \ \ list\ that\ contains\ all\ the\ room\ objects\ created\r\n
comment3.params=item\ rooms
comment3.target=void\ add(java.lang.String,\ java.util.HashMap)
comment3.text=\r\n\ Method\ that\ will\ be\ used\ to\ add\ an\ object\ from\ the\ room\ you\ are\ in\ to\r\n\ your\ inventory.\ Object\ must\ be\ in\ room\ you\ are\ in.\r\n\ \r\n\ @param\ item\r\n\ \ \ \ \ \ \ \ \ \ \ \ represents\ item\ you\ wish\ to\ add\ to\ your\ inventory\r\n
comment4.params=item\ rooms
comment4.target=void\ drop(java.lang.String,\ java.util.HashMap)
comment4.text=\r\n\ Method\ that\ will\ be\ responsible\ for\ dropping\ an\ item\ from\ you\ inventory\r\n\ to\ the\ room\ you\ are\ in.\ Must\ already\ have\ object\ in\ your\ inventory.\r\n\ \r\n\ @param\ item\r\n\ \ \ \ \ \ \ \ \ \ \ \ represents\ name\ of\ item\ you\ wish\ to\ drop\r\n
comment5.params=
comment5.target=java.lang.String\ getLocation()
comment5.text=\r\n\ Getter\ method\ that\ returns\ the\ players\ location.\r\n\ \r\n\ @return\ \r\n\ \t\tstring\ representing\ name\ of\ room\ player\ is\ in\r\n
comment6.params=
comment6.target=void\ getInventory()
comment6.text=\r\n\ Getter\ method\ that\ prints\ out\ the\ objects\ in\ the\ players\ inventory.\r\n
comment7.params=item
comment7.target=void\ look(java.lang.String)
comment7.text=\r\n\ Method\ that\ gets\ an\ items\ description\ if\ it\ is\ in\ your\ inventory.\r\n\ @param\ item\r\n\ \t\tname\ of\ item\r\n
comment8.params=rooms
comment8.target=void\ look(java.util.HashMap)
comment8.text=\r\n\ Method\ that\ gets\ description\ of\ room\ currently\ in.\r\n\ @param\ rooms\r\n\ \t\t\tcollection\ of\ rooms\ in\ world\r\n
comment9.params=
comment9.target=int\ getScore()
comment9.text=\r\n\ Getter\ method\ that\ returns\ players\ score.\r\n\ @return\r\n\ \t\tint\ representing\ score\r\n
numComments=11
